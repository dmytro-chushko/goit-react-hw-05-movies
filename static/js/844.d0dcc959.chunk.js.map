{"version":3,"file":"static/js/844.d0dcc959.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","helpers/fetchAPI.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ResultsList = styled.ul``;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ResultsItem = styled.li``;\n\nexport const Link = styled(NavLink)`\n  font-size: 14px;\n  color: black;\n\n  :hover {\n    font-size: 16px;\n    font-weight: 700;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { ResultsItem, Link } from './MovieItem.styled';\n\nconst MovieItem = ({ id, title }) => {\n  const location = useLocation();\n  return (\n    <ResultsItem>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {title}\n      </Link>\n    </ResultsItem>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { ResultsList } from './MovieList.styled';\nimport MovieItem from 'components/MovieItem';\n\nconst MovieList = ({ moviesArr }) => {\n  return (\n    <ResultsList>\n      {moviesArr.map(({ id, original_title }) => (\n        <MovieItem key={id} title={original_title} id={id} />\n      ))}\n    </ResultsList>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  moviesArr: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '3aee21951118aea271842c595cb04969';\n\nexport const fetchMovieOnTrend = async () => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n    );\n    return data.data.results;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport const fetchSearchMovies = async searchTerm => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchTerm}`\n    );\n    return data.data.results;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const data = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}`);\n    return data.data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport const fetchMovieCredits = async id => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${KEY}`\n    );\n    return data.data.cast;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`\n    );\n    return data.data.results;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { FcSearch } from 'react-icons/fc';\nimport {\n  SearchForm,\n  SearchFormInput,\n  SearchButton,\n  SearchButtonLabel,\n} from './Searchbar.styled';\n\nconst Searchbar = ({ onSubmit, query }) => {\n  return (\n    <Formik\n      initialValues={{ search: query ?? '' }}\n      onSubmit={({ search }) => onSubmit(search)}\n    >\n      <SearchForm>\n        <SearchButton type=\"submit\">\n          <FcSearch size={24} />\n          <SearchButtonLabel>Search</SearchButtonLabel>\n        </SearchButton>\n        <SearchFormInput\n          type=\"text\"\n          name=\"search\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </SearchForm>\n    </Formik>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  query: PropTypes.string,\n};\n\nexport default Searchbar;\n","import { Notify } from 'notiflix';\nimport { fetchSearchMovies } from 'helpers/fetchAPI';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Searchbar from 'components/Searchbar';\nimport MovieList from 'components/MovieList';\n\nconst Movies = () => {\n  const [moviesArr, setMoviesArr] = useState([]);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    const getMovieBySearchTerm = async query => {\n      const data = await fetchSearchMovies(query);\n      if (data.length === 0) {\n        setMoviesArr([]);\n        Notify.info('Sorry, We find nothing, try another auery');\n        return;\n      }\n      setMoviesArr([...data]);\n    };\n    getMovieBySearchTerm(query);\n  }, [query]);\n\n  const handleSubmit = inputSearchTerm => {\n    if (!inputSearchTerm) {\n      Notify.info('Please, input search query');\n      return;\n    }\n    if (inputSearchTerm === query) {\n      Notify.info('You have already completed this search');\n      return;\n    }\n    setSearchQuery({ query: inputSearchTerm });\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleSubmit} query={query} />\n      {moviesArr.length > 0 && <MovieList moviesArr={moviesArr} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["ResultsList","styled","ResultsItem","Link","NavLink","id","title","location","useLocation","to","state","from","moviesArr","map","original_title","BASE_URL","KEY","fetchMovieOnTrend","axios","data","results","Notify","message","fetchSearchMovies","searchTerm","fetchMovieDetails","fetchMovieCredits","cast","fetchMovieReviews","SearchForm","Form","SearchFormInput","Field","SearchButton","SearchButtonLabel","onSubmit","query","initialValues","search","type","size","name","autoComplete","autoFocus","placeholder","useState","setMoviesArr","useSearchParams","searchQuery","setSearchQuery","get","useEffect","getMovieBySearchTerm","length","inputSearchTerm","MovieList"],"sourceRoot":""}